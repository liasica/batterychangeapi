// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// ComboDao is the manager for logic model data accessing
// and custom defined data operations functions management.
type ComboDao struct {
	gmvc.M               // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	DB      gdb.DB       // DB is the raw underlying database management object.
	Table   string       // Table is the table name of the DAO.
	Columns comboColumns // Columns contains all the columns of Table that for convenient usage.
}

// ComboColumns defines and stores column names for table combo.
type comboColumns struct {
	Id          string //
	Type        string // 套餐类型: 1个人 2团体
	BatteryType string // 电池型号
	Name        string // 名称
	Days        string // 套餐时长天数
	Amount      string // 套餐总价(包含押金)
	Price       string // 套餐价格
	Deposit     string // 押金
	ProvinceId  string // 省级行政编码
	CityId      string // 市级行政编码
	Desc        string // 描述
	CreatedAt   string //
	UpdatedAt   string //
	DeletedAt   string // 停用时间
}

func NewComboDao() *ComboDao {
	return &ComboDao{
		M:     g.DB("default").Model("combo").Safe(),
		DB:    g.DB("default"),
		Table: "combo",
		Columns: comboColumns{
			Id:          "id",
			Type:        "type",
			BatteryType: "batteryType",
			Name:        "name",
			Days:        "days",
			Amount:      "amount",
			Price:       "price",
			Deposit:     "deposit",
			ProvinceId:  "provinceId",
			CityId:      "cityId",
			Desc:        "desc",
			CreatedAt:   "createdAt",
			UpdatedAt:   "updatedAt",
			DeletedAt:   "deletedAt",
		},
	}
}
