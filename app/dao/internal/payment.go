// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// PaymentDao is the manager for logic model data accessing
// and custom defined data operations functions management.
type PaymentDao struct {
	gmvc.M                 // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	DB      gdb.DB         // DB is the raw underlying database management object.
	Table   string         // Table is the table name of the DAO.
	Columns paymentColumns // Columns contains all the columns of Table that for convenient usage.
}

// PaymentColumns defines and stores column names for table payment.
type paymentColumns struct {
	Id           string //
	PayAt        string // 支付时间
	RelationId   string // 关联ID
	RelationType string // 关联类型:  1 购买套餐，2 续费，3 违约金
	State        string // 0 待支付 1 已支付 2 已退款
	PayType      string // 1 支付宝 2 微信
	PayNo        string // 第三方支付流水号
	Amount       string // 支付金额
	No           string // 支付编号
	UserId       string // 用户ID
	CreatedAt    string //
	UpdatedAt    string //
}

func NewPaymentDao() *PaymentDao {
	return &PaymentDao{
		M:     g.DB("default").Model("payment").Safe(),
		DB:    g.DB("default"),
		Table: "payment",
		Columns: paymentColumns{
			Id:           "id",
			PayAt:        "payAt",
			RelationId:   "relationId",
			RelationType: "relationType",
			State:        "state",
			PayType:      "payType",
			PayNo:        "payNo",
			Amount:       "amount",
			No:           "no",
			UserId:       "userId",
			CreatedAt:    "createdAt",
			UpdatedAt:    "updatedAt",
		},
	}
}
