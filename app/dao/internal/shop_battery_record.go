// ==========================================================================
// This is auto-generated by gf cli tool. DO NOT EDIT THIS FILE MANUALLY.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/database/gdb"
	"github.com/gogf/gf/frame/g"
	"github.com/gogf/gf/frame/gmvc"
)

// ShopBatteryRecordDao is the manager for logic model data accessing
// and custom defined data operations functions management.
type ShopBatteryRecordDao struct {
	gmvc.M                           // M is the core and embedded struct that inherits all chaining operations from gdb.Model.
	DB      gdb.DB                   // DB is the raw underlying database management object.
	Table   string                   // Table is the table name of the DAO.
	Columns shopBatteryRecordColumns // Columns contains all the columns of Table that for convenient usage.
}

// ShopBatteryRecordColumns defines and stores column names for table shop_battery_record.
type shopBatteryRecordColumns struct {
	Id          string //
	ShopId      string //
	Type        string // 1 入  2 出
	BizType     string //
	BizId       string // 业务ID 为 0 即为平台调拨
	Num         string //
	Day         string //
	UserName    string //
	BatteryType string // 电池型号 60 / 72
	CreatedAt   string //
}

func NewShopBatteryRecordDao() *ShopBatteryRecordDao {
	return &ShopBatteryRecordDao{
		M:     g.DB("default").Model("shop_battery_record").Safe(),
		DB:    g.DB("default"),
		Table: "shop_battery_record",
		Columns: shopBatteryRecordColumns{
			Id:          "id",
			ShopId:      "shopId",
			Type:        "type",
			BizType:     "bizType",
			BizId:       "bizId",
			Num:         "num",
			Day:         "day",
			UserName:    "userName",
			BatteryType: "batteryType",
			CreatedAt:   "createdAt",
		},
	}
}
