// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/os/gtime"
)

// GroupSettlementDetail is the golang structure for table group_settlement_detail.
type GroupSettlementDetail struct {
	Id           uint64      `orm:"id,primary"   json:"id"`           //
	SettlementId uint64      `orm:"settlementId" json:"settlementId"` // 结算单ID
	ParentId     uint64      `orm:"parentId"     json:"parentId"`     // 上次结算单ID(拆分自)
	State        uint        `orm:"state"        json:"state"`        // 当前状态: 0计费中 1已结算
	UserId       uint64      `orm:"userId"       json:"userId"`       // 用户ID
	GroupId      uint        `orm:"groupId"      json:"groupId"`      // 团队ID
	ComboId      uint        `orm:"comboId"      json:"comboId"`      // 套餐ID
	ComboOrderId uint64      `orm:"comboOrderId" json:"comboOrderId"` // 套餐订单ID
	Ignorance    int         `orm:"ignorance"    json:"ignorance"`    // 是否忽略(若同一天有多次新签退租则计为1天)
	BatteryType  string      `orm:"batteryType"  json:"batteryType"`  // 电池类型
	UnitPrice    float64     `orm:"unitPrice"    json:"unitPrice"`    // 计费单价(每日计费)
	StartDate    *gtime.Time `orm:"startDate"    json:"startDate"`    // 账单开始日期
	CancelDate   *gtime.Time `orm:"cancelDate"   json:"cancelDate"`   // 退租日期
	StopDate     *gtime.Time `orm:"stopDate"     json:"stopDate"`     // 账单结算日期
	SplitAt      *gtime.Time `orm:"splitAt"      json:"splitAt"`      // 账单拆分日
	CreatedAt    *gtime.Time `orm:"createdAt"    json:"createdAt"`    //
	UpdatedAt    *gtime.Time `orm:"updatedAt"    json:"updatedAt"`    //
}
