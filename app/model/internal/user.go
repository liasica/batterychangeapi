// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"github.com/gogf/gf/os/gtime"
)

// User is the golang structure for table user.
type User struct {
	Id                       uint64      `orm:"id,primary"               json:"id"`                       //
	GroupId                  uint        `orm:"groupId"                  json:"groupId"`                  // 团签用户，团体ID;  个签用户为 0
	Mobile                   string      `orm:"mobile,unique"            json:"mobile"`                   // 手机号码
	Type                     uint        `orm:"type"                     json:"type"`                     // 用户类型 	1 个签骑手 2 团签骑手 3 团签BOSS
	Qr                       string      `orm:"qr"                       json:"qr"`                       // 骑手二维码数据
	RealName                 string      `orm:"realName"                 json:"realName"`                 // 真实姓名
	IdCardNo                 string      `orm:"idCardNo"                 json:"idCardNo"`                 // 身份证号码
	IdCardImg1               string      `orm:"idCardImg1"               json:"idCardImg1"`               // 正面图
	IdCardImg2               string      `orm:"idCardImg2"               json:"idCardImg2"`               // 反面图
	IdCardImg3               string      `orm:"idCardImg3"               json:"idCardImg3"`               // 人像图
	AuthState                uint        `orm:"authState"                json:"authState"`                // 实名认证状态 0 未提交 ，1 待审核， 2 审核通过，3 审核未通过
	BatteryState             uint        `orm:"batteryState"             json:"batteryState"`             // 个人用户换点状态：0 未开通，1 租借中，2 寄存中，3 已退租
	BatteryType              uint        `orm:"batteryType"              json:"batteryType"`              // 套餐电池型号 60 、 72
	PackagesId               uint        `orm:"packagesId"               json:"packagesId"`               // 套餐ID
	PackagesOrderId          uint64      `orm:"packagesOrderId"          json:"packagesOrderId"`          // 办理套餐订单ID
	BatteryReturnAt          *gtime.Time `orm:"batteryReturnAt"          json:"batteryReturnAt"`          // 个人用户应归还电池时间， 小于当前时间即逾期
	BatteryCheckAt           *gtime.Time `orm:"batteryCheckAt"           json:"batteryCheckAt"`           // 个签用户电池寄存时间
	AccessToken              string      `orm:"accessToken,unique"       json:"accessToken"`              //
	Salt                     string      `orm:"salt"                     json:"salt"`                     //
	DeviceType               int         `orm:"deviceType"               json:"deviceType"`               // 1 安卓  2  iOS
	DeviceToken              string      `orm:"deviceToken"              json:"deviceToken"`              // 用户推送消息唯一ID
	EsignAccountId           string      `orm:"esignAccountId"           json:"esignAccountId"`           // 易签账户ID
	EsignFlowId              string      `orm:"esignFlowId"              json:"esignFlowId"`              // 易签签约流程ID
	EsignFileId              string      `orm:"esignFileId"              json:"esignFileId"`              // 易签签约文件ID
	SignState                uint        `orm:"signState"                json:"signState"`                // 签约状态 0 未签约 1 已签约
	BizBatteryRenewalCnt     uint        `orm:"bizBatteryRenewalCnt"     json:"bizBatteryRenewalCnt"`     // 积累换次数
	BizBatteryRenewalSeconds uint        `orm:"bizBatteryRenewalSeconds" json:"bizBatteryRenewalSeconds"` // 累计使用电池时间，单位秒
	BizBatterySecondsStartAt *gtime.Time `orm:"bizBatterySecondsStartAt" json:"bizBatterySecondsStartAt"` // 需要统计使用时间的开始时间，为空即不需要统计
	CreatedAt                *gtime.Time `orm:"createdAt"                json:"createdAt"`                //
	UpdatedAt                *gtime.Time `orm:"updatedAt"                json:"updatedAt"`                //
}
